name: Update Data

on:
  schedule:
    - cron: '0 22 * * *'  # every day at 22:00
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  # Run install on push/PR/schedule
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: python -m pip install -r requirements.txt

  # Only retrieve data on cron scheduled run
  update:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: python -m pip install -r requirements.txt

      - name: Update data
        run: python get_fpl_league_data.py --csv data/league_results.csv

      - name: Commit changes if CSV updated
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add data/league_results.csv
          if ! git diff --cached --quiet; then
            TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
            git commit -m "Update league_results.csv at $TIMESTAMP"
            git push origin HEAD:${GITHUB_REF#refs/heads/}
          else
            echo "No changes to commit"
          fi
